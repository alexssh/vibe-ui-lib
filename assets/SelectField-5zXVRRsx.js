import{j as e}from"./jsx-runtime-BjG_zV1W.js";import{c as n}from"./index-CRGxjvZy.js";import{I as s}from"./Icon-DdOvRL-u.js";const c=n(["group relative inline-flex w-full items-center rounded h-12","border border-neutral-border-interactive bg-neutral-bg-interactive","focus-within:outline-2 focus-within:outline-neutral-border-interactive-focus focus-within:border-transparent","hover:bg-neutral-bg-interactive-hover hover:border-neutral-border-interactive-hover focus-within:hover:border-transparent","data-[disabled=true]:bg-neutral-bg-interactive-disabled data-[disabled=true]:text-neutral-text-interactive-disabled data-[disabled=true]:border-transparent data-[disabled=true]:outline-none","data-[error=true]:outline-2 data-[error=true]:outline-[color:var(--color-neutral-text-error)] data-[error=true]:border-transparent"].join(" ")),u=n(["peer block w-full bg-transparent","text-[16px] leading-[20px] font-normal not-italic text-[color:var(--color-neutral-text-default)]","px-4","outline-none border-transparent","disabled:text-neutral-text-interactive-disabled","placeholder:text-[color:var(--color-neutral-text-interactive-placeholder)] disabled:placeholder:text-neutral-text-interactive-disabled"].join(" ")),l=({ref:i,className:o,children:d,disabled:t,error:r=!1,...a})=>e.jsxs("div",{className:c({className:o}),"data-testid":"SelectField","data-disabled":t?"true":void 0,"data-error":r?"true":void 0,children:[e.jsx("select",{ref:i,className:u({})+" appearance-none pr-4",disabled:t,"aria-invalid":a["aria-invalid"]??(r?!0:void 0),...a,children:d}),t?null:e.jsx("div",{className:"pointer-events-none",children:e.jsx("span",{className:"inline-flex h-12 w-12 items-center justify-center text-[color:var(--color-neutral-icon-default)]",children:e.jsx(s,{glyph:"arrowDown"})})})]});l.displayName="SelectField";l.__docgenInfo={description:`SelectField component
Basic <select> styled to match InputField. Includes an inline dropdown icon.`,methods:[],displayName:"SelectField",props:{ref:{required:!1,tsType:{name:"ReactRef",raw:"React.Ref<HTMLSelectElement>",elements:[{name:"HTMLSelectElement"}]},description:"Ref to the underlying select element."},error:{required:!1,tsType:{name:"boolean"},description:`Visual error state. Adds a red outline and sets aria-invalid when not provided by user.
@defaultValue false`,defaultValue:{value:"false",computed:!1}}}};export{l as S};
