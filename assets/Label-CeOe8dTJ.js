import{j as c}from"./jsx-runtime-BjG_zV1W.js";import{c as d}from"./index-CRGxjvZy.js";const p=d("block text-[14px] leading-[18px] font-normal not-italic text-[color:var(--color-neutral-text-secondary)] pb-2"),t=({ref:a,className:n,children:l,title:s="Label",htmlFor:e,...o})=>{const r=l??s,i=e?"label":"span";return c.jsx(i,{ref:a,className:p({className:n}),...e?{htmlFor:e}:{},"data-testid":"Label",...o,children:r})};t.displayName="Label";t.__docgenInfo={description:`Label component.

Atomic text label used across form fields and other UI elements that require labels.`,methods:[],displayName:"Label",props:{ref:{required:!1,tsType:{name:"ReactRef",raw:"React.Ref<HTMLSpanElement | HTMLLabelElement>",elements:[{name:"union",raw:"HTMLSpanElement | HTMLLabelElement",elements:[{name:"HTMLSpanElement"},{name:"HTMLLabelElement"}]}]},description:"Ref to the underlying DOM element. React 19 allows passing `ref` as a prop without `forwardRef`."},title:{required:!1,tsType:{name:"string"},description:'Optional explicit text content for the label. When `children` is provided, it takes precedence.\n@defaultValue "Label"',defaultValue:{value:'"Label"',computed:!1}},htmlFor:{required:!1,tsType:{name:"string"},description:"Associates the label with a form control. When provided, the component renders a `<label>` element; otherwise it renders a `<span>`."},children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Label content. If omitted, `title` will be used."}},composes:["Omit","VariantProps"]};export{t as L};
