import{j as e}from"./jsx-runtime-BjG_zV1W.js";import{r as h}from"./iframe-C_JpEGp9.js";import{c as T}from"./Icon-BRNX2Kck.js";import{C as w}from"./CheckboxControl-Bj4Z2zGW.js";import"./index-C0-1UWSU.js";import"./index-Ci8-TjZE.js";const E=T("group inline-flex items-center gap-3 select-none",{variants:{disabled:{true:"cursor-not-allowed opacity-100",false:"cursor-pointer"}},defaultVariants:{disabled:!1}}),F=T("text-[15px] text-[color:var(--color-neutral-text-interactive)]",{variants:{checked:{true:"text-[color:var(--color-accented-text-interactive)]",false:"text-[color:var(--color-neutral-text-interactive)]"},disabled:{true:"",false:""}},compoundVariants:[{checked:!1,disabled:!1,class:"group-hover:text-neutral-text-interactive-hover"},{checked:!0,disabled:!1,class:"group-hover:text-neutral-text-interactive-hover"},{checked:!1,disabled:!1,class:"focus-visible:text-neutral-text-interactive-focus"},{checked:!0,disabled:!1,class:"focus-visible:text-neutral-text-interactive-focus"},{checked:!1,disabled:!0,class:"text-neutral-text-interactive-disabled"},{checked:!0,disabled:!0,class:"text-neutral-text-interactive-disabled"}],defaultVariants:{checked:!1,disabled:!1}}),t=({id:l,title:V="Label",checked:n,defaultChecked:j,disabled:a=!1,onCheckedChange:c,className:q,name:L,value:N,...S})=>{const I=h.useId(),d=l??I,i=typeof n=="boolean",[O,D]=h.useState(j??!1),u=i?n:O,_=p=>{i||D(p),c==null||c(p)};return e.jsxs("div",{className:E({disabled:a,className:q}),"data-testid":"Checkbox","data-disabled":a?"true":void 0,...S,children:[e.jsx(w,{id:d,disabled:a,checked:!!u,onCheckedChange:_,name:L,value:N}),e.jsx("label",{htmlFor:d,className:F({disabled:a,checked:!!u}),children:V})]})};t.displayName="Checkbox";t.__docgenInfo={description:"Checkbox combines a clickable control and a text label.\n- Only the public `Checkbox` is exported.",methods:[],displayName:"Checkbox",props:{title:{required:!1,tsType:{name:"string"},description:`The text label displayed to the right of the control.
Matches the Figma prop name ("title").
@defaultValue "Label"`,defaultValue:{value:'"Label"',computed:!1}},checked:{required:!1,tsType:{name:"boolean"},description:"When provided, the component becomes controlled."},defaultChecked:{required:!1,tsType:{name:"boolean"},description:"The uncontrolled default checked state."},disabled:{required:!1,tsType:{name:"boolean"},description:`Whether the checkbox is disabled.
@defaultValue false`,defaultValue:{value:"false",computed:!1}},onCheckedChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(checked: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"checked"}],return:{name:"void"}}},description:"Handler called when the checked state changes."},name:{required:!1,tsType:{name:"string"},description:"Optional name/value for form integration."},value:{required:!1,tsType:{name:"string"},description:""},id:{required:!1,tsType:{name:"string"},description:"Optional id applied to the control element."}},composes:["Omit","VariantProps"]};const A={title:"Components/Checkbox",component:t,tags:["autodocs"],argTypes:{title:{control:"text"},checked:{control:!1,table:{category:"State"}},defaultChecked:{control:"boolean",table:{category:"State"}},disabled:{control:"boolean"},onCheckedChange:{action:"checkedChange"},name:{control:"text"},value:{control:"text"},id:{control:"text"}}},r={args:{title:"Label"}},s={args:{title:"Checked",defaultChecked:!0}},o={render:l=>e.jsxs("div",{className:"flex flex-col gap-4",children:[e.jsx(t,{checked:!1,title:"Label",disabled:!0}),e.jsx(t,{checked:!0,title:"Checked",disabled:!0})]})};var f,m,b;r.parameters={...r.parameters,docs:{...(f=r.parameters)==null?void 0:f.docs,source:{originalSource:`{
  args: {
    title: "Label"
  }
}`,...(b=(m=r.parameters)==null?void 0:m.docs)==null?void 0:b.source}}};var x,k,v;s.parameters={...s.parameters,docs:{...(x=s.parameters)==null?void 0:x.docs,source:{originalSource:`{
  args: {
    title: "Checked",
    defaultChecked: true
  }
}`,...(v=(k=s.parameters)==null?void 0:k.docs)==null?void 0:v.source}}};var g,C,y;o.parameters={...o.parameters,docs:{...(g=o.parameters)==null?void 0:g.docs,source:{originalSource:`{
  render: args => {
    return <div className="flex flex-col gap-4">
        <Checkbox checked={false} title="Label" disabled />
        <Checkbox checked={true} title="Checked" disabled />
      </div>;
  }
}`,...(y=(C=o.parameters)==null?void 0:C.docs)==null?void 0:y.source}}};const B=["Default","Checked","Disabled"];export{s as Checked,r as Default,o as Disabled,B as __namedExportsOrder,A as default};
