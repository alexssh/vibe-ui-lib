import{j as s}from"./jsx-runtime-BjG_zV1W.js";import{c as d}from"./index-CRGxjvZy.js";const c=d("block text-[14px] leading-[18px] font-normal not-italic pt-2",{variants:{variant:{default:"text-[color:var(--color-neutral-text-secondary)]",error:"text-[color:var(--color-neutral-text-error)]"}},defaultVariants:{variant:"default"}}),e=({ref:t,className:a,children:n,title:r="Hint",variant:i="default",...o})=>{const l=n??r;return s.jsx("p",{ref:t,className:c({className:a,variant:i}),"data-testid":"Hint",...o,children:l})};e.displayName="Hint";e.__docgenInfo={description:`Hint component.

Atomic caption-like text used to display helper or error messages beneath inputs and other field-like components.`,methods:[],displayName:"Hint",props:{ref:{required:!1,tsType:{name:"ReactRef",raw:"React.Ref<HTMLParagraphElement>",elements:[{name:"HTMLParagraphElement"}]},description:"Ref to the underlying DOM element. React 19 allows passing `ref` as a prop without `forwardRef`."},title:{required:!1,tsType:{name:"string"},description:'Optional explicit text content for the hint. When `children` is provided, it takes precedence.\n@defaultValue "Hint"',defaultValue:{value:'"Hint"',computed:!1}},variant:{required:!1,tsType:{name:"union",raw:'"default" | "error"',elements:[{name:"literal",value:'"default"'},{name:"literal",value:'"error"'}]},description:`Visual tone of the hint text.
@defaultValue "default"`,defaultValue:{value:'"default"',computed:!1}},children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Hint content. If omitted, `title` will be used."}},composes:["Omit","VariantProps"]};export{e as H};
