import{j as t}from"./jsx-runtime-BjG_zV1W.js";import{r as I}from"./iframe-DyN-BCYS.js";import{c}from"./index-CRGxjvZy.js";import{C as y}from"./ClearButton-StNyAEWN.js";const j=c(["group relative inline-flex w-full items-center rounded h-12","border border-neutral-border-interactive bg-neutral-bg-interactive","focus-within:outline-2 focus-within:outline-neutral-border-interactive-focus focus-within:border-transparent","hover:bg-neutral-bg-interactive-hover hover:border-neutral-border-interactive-hover focus-within:hover:border-transparent","data-[disabled=true]:bg-neutral-bg-interactive-disabled data-[disabled=true]:text-neutral-text-interactive-disabled data-[disabled=true]:border-transparent","[&:has(button[data-clearbutton]:focus)]:outline-none [&:has(button[data-clearbutton]:focus-visible)]:outline-none","[&:has(button[data-clearbutton]:focus)]:outline-transparent [&:has(button[data-clearbutton]:focus-visible)]:outline-transparent","[&:has(button[data-clearbutton]:focus)]:border-neutral-border-interactive [&:has(button[data-clearbutton]:focus-visible)]:border-neutral-border-interactive","data-[error=true]:outline-2 data-[error=true]:outline-[color:var(--color-neutral-text-error)] data-[error=true]:border-transparent"].join(" ")),F=c(["peer block w-full bg-transparent","text-[16px] leading-[20px] font-normal not-italic text-[color:var(--color-neutral-text-default)]","px-4","outline-none border-transparent","disabled:text-neutral-text-interactive-disabled","placeholder:text-[color:var(--color-neutral-text-interactive-placeholder)] disabled:placeholder:text-neutral-text-interactive-disabled"].join(" ")),p=({ref:b,className:f,onClear:a,showClear:v=!0,disabled:e,error:o=!1,value:i,defaultValue:h,onChange:r,placeholder:m="",...l})=>{const n=i!==void 0,[x,u]=I.useState(h??""),s=n?i:x,w=d=>{n||u(d.target.value),r==null||r(d)},g=()=>{e||(n||u(""),a==null||a())},V=v&&!!s&&!e;return t.jsxs("div",{className:j({className:f}),"data-testid":"InputField","data-disabled":e?"true":void 0,"data-error":o?"true":void 0,children:[t.jsx("input",{ref:b,className:F({}),disabled:e,"aria-invalid":l["aria-invalid"]??(o?!0:void 0),value:s,onChange:w,placeholder:m,...l}),V?t.jsx("div",{className:"px-0 py-2",children:t.jsx(y,{onClick:g})}):null]})};p.displayName="InputField";p.__docgenInfo={description:`InputField component.
Basic text input with an optional clear button.`,methods:[],displayName:"InputField",props:{ref:{required:!1,tsType:{name:"ReactRef",raw:"React.Ref<HTMLInputElement>",elements:[{name:"HTMLInputElement"}]},description:"Ref to the input element."},onClear:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Callback when the clear button is pressed."},showClear:{required:!1,tsType:{name:"boolean"},description:`Controls whether the clear button is shown when there is a value.
@defaultValue true`,defaultValue:{value:"true",computed:!1}},error:{required:!1,tsType:{name:"boolean"},description:`Visual error state. Adds a red outline and sets aria-invalid when not provided by user.
@defaultValue false`,defaultValue:{value:"false",computed:!1}},placeholder:{defaultValue:{value:'""',computed:!1},required:!1}},composes:["Omit","VariantProps"]};export{p as I};
